// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// jmiCpp
double jmiCpp(const arma::mat& x, const arma::mat& y, const arma::mat& w);
RcppExport SEXP _DMI_jmiCpp(SEXP xSEXP, SEXP ySEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(jmiCpp(x, y, w));
    return rcpp_result_gen;
END_RCPP
}
// entropyCpp
double entropyCpp(const arma::mat& x, const arma::mat& w);
RcppExport SEXP _DMI_entropyCpp(SEXP xSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(entropyCpp(x, w));
    return rcpp_result_gen;
END_RCPP
}
// indepCpp
double indepCpp(const arma::mat& x, const arma::mat& y, const arma::mat& w);
RcppExport SEXP _DMI_indepCpp(SEXP xSEXP, SEXP ySEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(indepCpp(x, y, w));
    return rcpp_result_gen;
END_RCPP
}
// balanceCpp
double balanceCpp(const arma::mat& x, const arma::mat& y, const arma::mat& w);
RcppExport SEXP _DMI_balanceCpp(SEXP xSEXP, SEXP ySEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(balanceCpp(x, y, w));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _DMI_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _DMI_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _DMI_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _DMI_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DMI_jmiCpp", (DL_FUNC) &_DMI_jmiCpp, 3},
    {"_DMI_entropyCpp", (DL_FUNC) &_DMI_entropyCpp, 2},
    {"_DMI_indepCpp", (DL_FUNC) &_DMI_indepCpp, 3},
    {"_DMI_balanceCpp", (DL_FUNC) &_DMI_balanceCpp, 3},
    {"_DMI_rcpparma_hello_world", (DL_FUNC) &_DMI_rcpparma_hello_world, 0},
    {"_DMI_rcpparma_outerproduct", (DL_FUNC) &_DMI_rcpparma_outerproduct, 1},
    {"_DMI_rcpparma_innerproduct", (DL_FUNC) &_DMI_rcpparma_innerproduct, 1},
    {"_DMI_rcpparma_bothproducts", (DL_FUNC) &_DMI_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DMI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
